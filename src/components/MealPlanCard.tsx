import React from "react";
import { Meal } from "../types/meal";
import {
  calculateRecipeNutrition,
  calculateRecipeCost,
} from "@/utils/nutritionCalculator";
import { useFoodItems } from "@/context/FoodItemsContext";

interface MealPlanCardProps {
  day: string;
  mealType: string;
  meal: Meal | null;
  meals: Meal[];
  onAddMeal: (day: string, mealType: string, mealId: string) => void;
  onRemoveMeal: (day: string, mealType: string) => void;
}

export default function MealPlanCard({
  day,
  mealType,
  meal,
  meals,
  onAddMeal,
  onRemoveMeal,
}: MealPlanCardProps) {
  const { foodItems } = useFoodItems();

  const nutrition =
    meal?.calculatedNutrition ||
    (meal ? calculateRecipeNutrition(meal.ingredients, foodItems) : null);

  return (
    <div className="self-stretch flex-1 p-4 bg-neutral-50 flex flex-col justify-start items-start gap-5 min-h-[240px]">
      {!meal ? (
        <div className="w-full h-full flex flex-col justify-center">
          <select
            className="w-full p-2 rounded-lg ring-1 ring-gray-300 focus:ring-2 focus:ring-orange-500"
            onChange={(e) => {
              if (e.target.value) {
                onAddMeal(day, mealType, e.target.value);
              }
            }}
            defaultValue=""
          >
            <option value="" disabled>
              Choose a meal...
            </option>
            {meals.map((m) => (
              <option key={m.id} value={m.id}>
                {m.name}
              </option>
            ))}
          </select>
        </div>
      ) : (
        <>
          <div className="self-stretch inline-flex justify-start items-start gap-2">
            <div className="flex-1 inline-flex flex-col justify-start items-start gap-2">
              <div className="self-stretch justify-center text-[#1f2a37] text-lg font-semibold font-['Inter']">
                {meal?.name}
              </div>
              <div className="self-stretch justify-center text-gray-700 text-sm font-normal font-['Inter'] line-clamp-2">
                {meal?.description}
              </div>
            </div>
            <button
              onClick={() => onRemoveMeal(day, mealType)}
              className="w-6 h-6 flex items-center justify-center"
            >
              <svg
                width="18"
                height="20"
                viewBox="0 0 18 20"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16 5L15.1327 17.1425C15.0579 18.1891 14.187 19 13.1378 19H4.86224C3.81296 19 2.94208 18.1891 2.86732 17.1425L2 5M7 9V15M11 9V15M12 5V2C12 1.44772 11.5523 1 11 1H7C6.44772 1 6 1.44772 6 2V5M1 5H17"
                  stroke="#4B5563"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </button>
          </div>

          <div className="inline-flex justify-start items-center gap-5">
            <div className="flex justify-start items-start gap-[3px]">
              <svg
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M8 5.33333V8L10 10M14 8C14 11.3137 11.3137 14 8 14C4.68629 14 2 11.3137 2 8C2 4.68629 4.68629 2 8 2C11.3137 2 14 4.68629 14 8Z"
                  stroke="#4B5563"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
              <div className="justify-center text-gray-700 text-xs font-normal font-['Inter']">
                {meal?.preparationTime} min
              </div>
            </div>
            <div className="flex justify-start items-start gap-[3px]">
              <svg
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <g id="ForkKnife">
                  <path
                    id="Vector"
                    d="M4.5 5.49999V2.49999C4.5 2.36739 4.55268 2.24021 4.64645 2.14644C4.74022 2.05267 4.8674 1.99999 5 1.99999C5.13261 1.99999 5.25979 2.05267 5.35356 2.14644C5.44733 2.24021 5.5 2.36739 5.5 2.49999V5.49999C5.5 5.6326 5.44733 5.75978 5.35356 5.85355C5.25979 5.94732 5.13261 5.99999 5 5.99999C4.8674 5.99999 4.74022 5.94732 4.64645 5.85355C4.55268 5.75978 4.5 5.6326 4.5 5.49999ZM13.5 2.49999V14C13.5 14.1326 13.4473 14.2598 13.3536 14.3535C13.2598 14.4473 13.1326 14.5 13 14.5C12.8674 14.5 12.7402 14.4473 12.6465 14.3535C12.5527 14.2598 12.5 14.1326 12.5 14V11H9.5C9.3674 11 9.24022 10.9473 9.14645 10.8535C9.05268 10.7598 9 10.6326 9 10.5C9.02322 9.30229 9.1745 8.11051 9.45125 6.94499C10.0625 4.41437 11.2213 2.71812 12.8031 2.04062C12.8792 2.00805 12.9621 1.99485 13.0445 2.00221C13.1269 2.00957 13.2061 2.03725 13.2752 2.08277C13.3443 2.12829 13.4009 2.19024 13.4402 2.26305C13.4794 2.33587 13.5 2.41728 13.5 2.49999ZM12.5 3.36874C10.4894 4.90437 10.0956 8.64499 10.0188 9.99999H12.5V3.36874ZM7.49313 2.41812C7.48334 2.35247 7.46057 2.28942 7.42616 2.23266C7.39174 2.1759 7.34637 2.12656 7.29268 2.08751C7.239 2.04847 7.17808 2.02051 7.11348 2.00526C7.04887 1.99001 6.98188 1.98777 6.9164 1.99869C6.85092 2.0096 6.78828 2.03344 6.73211 2.06882C6.67594 2.1042 6.62739 2.15041 6.58927 2.20475C6.55115 2.25909 6.52423 2.32048 6.51008 2.38534C6.49594 2.45019 6.49485 2.51721 6.50688 2.58249L7 5.53937C7 6.0698 6.78929 6.57851 6.41422 6.95358C6.03915 7.32866 5.53044 7.53937 5 7.53937C4.46957 7.53937 3.96086 7.32866 3.58579 6.95358C3.21072 6.57851 3 6.0698 3 5.53937L3.4925 2.58249C3.50453 2.51721 3.50345 2.45019 3.4893 2.38534C3.47515 2.32048 3.44824 2.25909 3.41012 2.20475C3.372 2.15041 3.32344 2.1042 3.26727 2.06882C3.21111 2.03344 3.14846 2.0096 3.08298 1.99869C3.01751 1.98777 2.95051 1.99001 2.88591 2.00526C2.8213 2.02051 2.76038 2.04847 2.7067 2.08751C2.65302 2.12656 2.60764 2.1759 2.57323 2.23266C2.53882 2.28942 2.51605 2.35247 2.50625 2.41812L2.00625 5.41812C2.00198 5.4452 1.99989 5.47258 2 5.49999C2.001 6.20863 2.25245 6.8941 2.70992 7.43528C3.16739 7.97647 3.80143 8.33853 4.5 8.4575V14C4.5 14.1326 4.55268 14.2598 4.64645 14.3535C4.74022 14.4473 4.8674 14.5 5 14.5C5.13261 14.5 5.25979 14.4473 5.35356 14.3535C5.44733 14.2598 5.5 14.1326 5.5 14V8.4575C6.19858 8.33853 6.83262 7.97647 7.29009 7.43528C7.74756 6.8941 7.99901 6.20863 8 5.49999C7.99992 5.47256 7.99762 5.44518 7.99313 5.41812L7.49313 2.41812Z"
                    fill="#F85B1D"
                  />
                </g>
              </svg>
              <div className="justify-center text-[#f75b1d] text-xs font-bold font-['Inter']">
                {nutrition?.calories} cal
              </div>
            </div>
          </div>

          <div className="self-stretch inline-flex justify-start items-start gap-2">
            {["protein", "carbs", "fat"].map((nutrient) => (
              <div
                key={nutrient}
                className="flex-1 px-4 py-3 bg-white rounded-lg ring-1 ring-gray-300 inline-flex flex-col justify-start items-center gap-0.5"
              >
                <div className="self-stretch text-center justify-center text-gray-700 text-sm font-normal font-['Inter']">
                  {nutrition?.[nutrient as keyof typeof nutrition]}g
                </div>
                <div className="flex justify-center items-center text-gray-700 text-xs font-normal font-['Inter']">
                  {nutrient === "protein" && (
                    <svg
                      width="13"
                      height="12"
                      viewBox="0 0 13 12"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g id="FishSimple">
                        <path
                          id="Vector"
                          d="M8.31942 3.56252C8.31942 3.67377 8.28643 3.78252 8.22462 3.87502C8.16281 3.96753 8.07496 4.03962 7.97218 4.0822C7.86939 4.12477 7.75629 4.13591 7.64718 4.11421C7.53806 4.0925 7.43784 4.03893 7.35917 3.96026C7.2805 3.8816 7.22693 3.78137 7.20522 3.67225C7.18352 3.56314 7.19466 3.45004 7.23723 3.34726C7.27981 3.24447 7.35191 3.15662 7.44441 3.09481C7.53691 3.03301 7.64566 3.00002 7.75692 3.00002C7.9061 3.00002 8.04917 3.05928 8.15466 3.16477C8.26015 3.27026 8.31942 3.41333 8.31942 3.56252ZM9.79785 7.81736C8.52942 9.08298 6.54379 9.61502 3.8766 9.40877C3.95129 9.96627 4.05598 10.5533 4.19067 11.1699C4.21185 11.267 4.19357 11.3686 4.13987 11.4523C4.08616 11.536 4.00141 11.5949 3.90426 11.6161C3.8778 11.6221 3.85076 11.625 3.82363 11.625C3.73822 11.6249 3.65543 11.5955 3.58894 11.5419C3.52246 11.4883 3.47627 11.4136 3.45801 11.3302C3.30457 10.6292 3.1891 9.96299 3.1116 9.33142C2.48035 9.25361 1.81457 9.13814 1.11426 8.98502C1.01754 8.96333 0.933333 8.90424 0.880058 8.82065C0.826782 8.73706 0.80877 8.63577 0.829958 8.53894C0.851145 8.44211 0.909811 8.3576 0.993127 8.3039C1.07644 8.2502 1.17763 8.23167 1.27457 8.25236C1.89051 8.38673 2.47707 8.49142 3.03426 8.56642C2.82848 5.8997 3.36238 3.91455 4.62801 2.64658C6.67879 0.589704 9.93332 1.1672 10.5647 1.30408C10.7057 1.33481 10.8349 1.40539 10.937 1.50744C11.039 1.60948 11.1096 1.7387 11.1404 1.8797C11.2772 2.51111 11.8552 5.76564 9.79785 7.81736ZM9.09473 7.44752C8.06325 7.2917 7.10883 6.80948 6.37145 6.07158C5.63406 5.33369 5.1525 4.37895 4.99738 3.34736C3.98629 4.48877 3.58504 6.2658 3.79223 8.6508C6.1777 8.85939 7.95473 8.45814 9.09614 7.44752H9.09473ZM10.4072 2.03861C9.64831 1.88171 8.87038 1.8378 8.09863 1.9083C7.14988 2.00205 6.34551 2.27533 5.69629 2.72673C5.72208 3.78534 6.15398 4.79348 6.90257 5.54242C7.65116 6.29136 8.65911 6.72374 9.7177 6.75002C10.1686 6.1008 10.4438 5.29689 10.5361 4.34767C10.6063 3.57582 10.5629 2.79785 10.4072 2.03861Z"
                          fill="#374151"
                        />
                      </g>
                    </svg>
                  )}

                  {nutrient === "carbs" && (
                    <svg
                      width="13"
                      height="12"
                      viewBox="0 0 13 12"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g id="BowlFood">
                        <path
                          id="Vector"
                          d="M10.8333 4.875H10.4409C10.3467 3.85072 9.87318 2.8986 9.11326 2.20538C8.35335 1.51217 7.36185 1.12787 6.33325 1.12787C5.30465 1.12787 4.31316 1.51217 3.55324 2.20538C2.79333 2.8986 2.31982 3.85072 2.2256 4.875H1.83325C1.7338 4.875 1.63841 4.91451 1.56809 4.98483C1.49776 5.05516 1.45825 5.15054 1.45825 5.25C1.4599 6.14181 1.70533 7.01619 2.16799 7.7786C2.63066 8.541 3.29295 9.16241 4.08325 9.57562V9.75C4.08325 9.94891 4.16227 10.1397 4.30292 10.2803C4.44357 10.421 4.63434 10.5 4.83325 10.5H7.83325C8.03216 10.5 8.22293 10.421 8.36358 10.2803C8.50423 10.1397 8.58325 9.94891 8.58325 9.75V9.57562C9.37355 9.16241 10.0358 8.541 10.4985 7.7786C10.9612 7.01619 11.2066 6.14181 11.2083 5.25C11.2083 5.15054 11.1687 5.05516 11.0984 4.98483C11.0281 4.91451 10.9327 4.875 10.8333 4.875ZM9.68669 4.875H7.27638C7.73102 4.19291 8.41885 3.70008 9.21091 3.48891C9.46988 3.91015 9.63236 4.38351 9.68669 4.875ZM8.46513 2.63578C8.55106 2.70609 8.63341 2.78031 8.71216 2.85844C7.71389 3.2096 6.88896 3.93131 6.40825 4.87406H5.02544C5.25982 4.21708 5.69132 3.64847 6.26099 3.24593C6.83065 2.84338 7.51071 2.62653 8.20825 2.625C8.29403 2.625 8.37981 2.62922 8.46513 2.63578ZM6.33325 1.875C6.63417 1.8752 6.93371 1.91572 7.22388 1.99547C6.5172 2.17077 5.86923 2.52925 5.34526 3.03479C4.82128 3.54033 4.43983 4.17506 4.23935 4.875H2.97981C3.07284 4.0504 3.46606 3.28888 4.08452 2.7356C4.70298 2.18232 5.50343 1.87599 6.33325 1.875ZM8.05169 9C7.98628 9.03005 7.9309 9.0783 7.89216 9.13898C7.85343 9.19966 7.83298 9.2702 7.83325 9.34219V9.75H4.83325V9.34219C4.83353 9.2702 4.81308 9.19966 4.77434 9.13898C4.73561 9.0783 4.68023 9.03005 4.61481 9C3.95534 8.69653 3.38729 8.22493 2.96768 7.63254C2.54807 7.04015 2.29166 6.34781 2.22419 5.625H10.4409C10.3736 6.34766 10.1174 7.0399 9.69802 7.63228C9.27867 8.22466 8.7109 8.69634 8.05169 9Z"
                          fill="#374151"
                        />
                      </g>
                    </svg>
                  )}

                  {nutrient === "fat" && (
                    <svg
                      width="13"
                      height="12"
                      viewBox="0 0 13 12"
                      fill="none"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g id="IceCream">
                        <path
                          id="Vector"
                          d="M9.97227 4.18922V4.125C9.97227 3.13044 9.57718 2.17661 8.87392 1.47335C8.17066 0.770088 7.21683 0.375 6.22227 0.375C5.22771 0.375 4.27388 0.770088 3.57062 1.47335C2.86736 2.17661 2.47227 3.13044 2.47227 4.125V4.18922C2.22198 4.27762 2.01101 4.45167 1.87666 4.68061C1.74231 4.90954 1.69324 5.17861 1.73813 5.44023C1.78301 5.70185 1.91896 5.93917 2.12193 6.11024C2.3249 6.2813 2.58183 6.37508 2.84727 6.375H3.00477L5.89649 11.4375C5.92926 11.495 5.97666 11.5428 6.03388 11.576C6.0911 11.6093 6.15609 11.6268 6.22227 11.6268C6.28844 11.6268 6.35344 11.6093 6.41066 11.576C6.46788 11.5428 6.51528 11.495 6.54805 11.4375L9.43977 6.375H9.59727C9.86271 6.37508 10.1196 6.2813 10.3226 6.11024C10.5256 5.93917 10.6615 5.70185 10.7064 5.44023C10.7513 5.17861 10.7022 4.90954 10.5679 4.68061C10.4335 4.45167 10.2226 4.27762 9.97227 4.18922ZM6.22227 10.4944L3.86868 6.375H4.77243L6.67414 9.70313L6.22227 10.4944ZM6.54055 6.375L7.55821 8.15625L7.10633 8.9475L5.63633 6.375H6.54055ZM7.98993 7.40063L7.40399 6.375H8.57586L7.98993 7.40063ZM9.59727 5.625H2.84727C2.74781 5.625 2.65243 5.58549 2.5821 5.51517C2.51178 5.44484 2.47227 5.34946 2.47227 5.25C2.47227 5.15054 2.51178 5.05516 2.5821 4.98484C2.65243 4.91451 2.74781 4.875 2.84727 4.875C2.94673 4.875 3.04211 4.83549 3.11243 4.76517C3.18276 4.69484 3.22227 4.59946 3.22227 4.5V4.125C3.22227 3.32935 3.53834 2.56629 4.10095 2.00368C4.66356 1.44107 5.42662 1.125 6.22227 1.125C7.01792 1.125 7.78098 1.44107 8.34359 2.00368C8.9062 2.56629 9.22227 3.32935 9.22227 4.125V4.5C9.22227 4.59946 9.26178 4.69484 9.3321 4.76517C9.40243 4.83549 9.49781 4.875 9.59727 4.875C9.69673 4.875 9.79211 4.91451 9.86243 4.98484C9.93276 5.05516 9.97227 5.15054 9.97227 5.25C9.97227 5.34946 9.93276 5.44484 9.86243 5.51517C9.79211 5.58549 9.69673 5.625 9.59727 5.625Z"
                          fill="#374151"
                        />
                      </g>
                    </svg>
                  )}
                  {nutrient}
                </div>
              </div>
            ))}
          </div>
        </>
      )}
    </div>
  );
}
